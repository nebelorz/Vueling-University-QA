{
	"info": {
		"_postman_id": "2909333c-9486-42b5-909a-74f08f1f2963",
		"name": "Ejercicio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27605714"
	},
	"item": [
		{
			"name": "PokeAPI",
			"item": [
				{
					"name": "buscar_pokemon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"validateOK200(pm);\r",
									"validatePokemonName(pm, pm.environment.get(\"pokemon_name\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://pokeapi.co/api/v2/pokemon/{{pokemon_name}}",
							"protocol": "https",
							"host": [
								"pokeapi",
								"co"
							],
							"path": [
								"api",
								"v2",
								"pokemon",
								"{{pokemon_name}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ReqresAPI",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status 201 Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"id\": alex_0001,\r\n        \"email\": \"george.bluth@reqres.in\",\r\n        \"first_name\": \"Alex\",\r\n        \"last_name\": \"Gass√≥\",\r\n        \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r\n    },\r\n    \"support\": {\r\n        \"url\": \"https://reqres.in/#support-heading\",\r\n        \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/users/1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"validateOK200(pm);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"id\": 1,\r\n        \"email\": \"george.bluth@reqres.in\",\r\n        \"first_name\": \"Jorge\",\r\n        \"last_name\": \"Bluth\",\r\n        \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r\n    },\r\n    \"support\": {\r\n        \"url\": \"https://reqres.in/#support-heading\",\r\n        \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://reqres.in/api/users/1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get First User On The List",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://reqres.in/api/users/1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"validateOK200 = function (pm) {",
					"    pm.test(\"Status 200 OK\", function () {",
					"         pm.response.to.have.status(200);",
					"         ",
					"    });",
					"}",
					"",
					"validatePokemonName = function(pm, nombre) {",
					"    const response = pm.response.json(); // pasar respuesta a JSON",
					"    const pokemonName = response[\"name\"];",
					"",
					"    pm.test(\"Pokemon name is \" + nombre, function () {",
					"        pm.expect(pokemonName).to.eql(nombre)",
					"    });",
					"}"
				]
			}
		}
	]
}